{"version":3,"sources":["helpers/getPeriod.ts","components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["getPeriod","cursor","periodOfPage","countOfAllItems","Pagination","React","memo","total","perPage","currentPage","onPageChange","countOfButtons","Math","ceil","firstPageIsActive","lastPageIsActive","PageSwitcher","switchers","i","push","className","classNames","active","type","onClick","Items","items","from","to","disabled","href","numbers","n","getNumbers","map","App","useSearchParams","searchParams","setSearchParams","cursorFromQuery","get","periodOfPageFromQuery","useState","setPaginationParams","useMemo","length","infoText","id","value","onChange","event","currentTarget","htmlFor","page","String","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.141d9f40.chunk.js","sourcesContent":["export function getPeriod(\n  cursor: number,\n  periodOfPage: number,\n  countOfAllItems: number,\n) {\n  const from = (cursor - 1) * periodOfPage + 1;\n  const to = cursor * periodOfPage > countOfAllItems\n    ? countOfAllItems\n    : cursor * periodOfPage;\n\n  return [from, to];\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getPeriod } from '../../helpers/getPeriod';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void\n};\n\nexport const Pagination: React.FC<Props> = React.memo(({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const countOfButtons = Math.ceil(total / perPage);\n\n  const firstPageIsActive = currentPage === 1;\n  const lastPageIsActive = currentPage === countOfButtons;\n\n  const PageSwitcher = () => {\n    const switchers = [];\n\n    for (let i = 1; i <= countOfButtons; i += 1) {\n      const onClickHandler = () => onPageChange(i);\n\n      switchers.push(\n        <li\n          key={`Switcher key: ${i}`}\n          className={classNames(\n            'page-item',\n            { active: i === currentPage },\n          )}\n        >\n          <button\n            type=\"button\"\n            data-cy=\"pageLink\"\n            onClick={onClickHandler}\n            className=\"page-link\"\n          >\n            {i}\n          </button>\n        </li>,\n      );\n    }\n\n    return <>{switchers}</>;\n  };\n\n  const Items = () => {\n    const items = [];\n\n    const [from, to] = getPeriod(\n      currentPage,\n      perPage,\n      total,\n    );\n\n    for (let i = from; i <= to; i += 1) {\n      items.push(\n        <li\n          data-cy=\"item\"\n          key={`Item key: ${i}`}\n        >\n          {`Item ${i}`}\n        </li>,\n      );\n    }\n\n    return (\n      <ul>\n        {items}\n      </ul>\n    );\n  };\n\n  const onPrevHandler = () => {\n    if (!firstPageIsActive) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const onNextHandler = () => {\n    if (!lastPageIsActive) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames('page-item', { disabled: firstPageIsActive })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={firstPageIsActive}\n            onClick={onPrevHandler}\n\n          >\n            «\n          </a>\n        </li>\n\n        <PageSwitcher />\n\n        <li\n          className={classNames('page-item', { disabled: lastPageIsActive })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={lastPageIsActive}\n            onClick={onNextHandler}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <Items />\n    </>\n  );\n});\n","import React, { useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { getPeriod } from './helpers/getPeriod';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\ntype PaginationParams = {\n  cursor: number;\n  periodOfPage: number;\n};\n\nexport const App: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const cursorFromQuery = searchParams.get('cursor') || 1;\n  const periodOfPageFromQuery = searchParams.get('periodOfPage') || 5;\n\n  const [\n    { cursor, periodOfPage },\n    setPaginationParams,\n  ] = useState<PaginationParams>({\n    cursor: +cursorFromQuery,\n    periodOfPage: +periodOfPageFromQuery,\n  });\n\n  const countOfAllItems = useMemo(() => items.length, []);\n  const [from, to] = getPeriod(\n    cursor,\n    periodOfPage,\n    countOfAllItems,\n  );\n\n  const infoText = `Page ${cursor} (items ${from} - ${to} of ${countOfAllItems})`;\n\n  const selectHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPaginationParams({\n      cursor: 1,\n      periodOfPage: +event.currentTarget.value,\n    });\n\n    setSearchParams({\n      cursor: '1',\n      periodOfPage: event.currentTarget.value,\n    });\n  };\n\n  const onPageChange = (page: number) => {\n    setPaginationParams({\n      periodOfPage,\n      cursor: page,\n    });\n\n    setSearchParams({\n      periodOfPage: String(periodOfPage),\n      cursor: String(page),\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {infoText}\n\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={periodOfPage}\n            onChange={selectHandler}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={countOfAllItems}\n        perPage={periodOfPage}\n        currentPage={cursor}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n"],"sourceRoot":""}